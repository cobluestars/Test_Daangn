"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/posts";
exports.ids = ["pages/api/posts"];
exports.modules = {

/***/ "aws-sdk":
/*!**************************!*\
  !*** external "aws-sdk" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("aws-sdk");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/***/ ((module) => {

module.exports = import("uuid");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fposts&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cposts.ts&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fposts&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cposts.ts&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_posts_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\posts.ts */ \"(api)/./src/pages/api/posts.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_posts_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_posts_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_posts_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_posts_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/posts\",\n        pathname: \"/api/posts\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_posts_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnBvc3RzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTVDcGFnZXMlNUNhcGklNUNwb3N0cy50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUN3RDtBQUN4RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsb0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLG9EQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlc3RfZGFhbmduLz9iNjQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXHBvc3RzLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcG9zdHNcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9wb3N0c1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fposts&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cposts.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/lib/dynamoDB.ts":
/*!*****************************!*\
  !*** ./src/lib/dynamoDB.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var aws_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aws-sdk */ \"aws-sdk\");\n/* harmony import */ var aws_sdk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(aws_sdk__WEBPACK_IMPORTED_MODULE_0__);\n\naws_sdk__WEBPACK_IMPORTED_MODULE_0___default().config.update({\n    region: process.env.AWS_REGION,\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY\n});\nconst dynamoDb = new (aws_sdk__WEBPACK_IMPORTED_MODULE_0___default().DynamoDB).DocumentClient();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dynamoDb);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL2R5bmFtb0RCLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQjtBQUUxQkEscURBQVUsQ0FBQ0UsTUFBTSxDQUFDO0lBQ2RDLFFBQVFDLFFBQVFDLEdBQUcsQ0FBQ0MsVUFBVTtJQUM5QkMsYUFBYUgsUUFBUUMsR0FBRyxDQUFDRyxpQkFBaUI7SUFDMUNDLGlCQUFpQkwsUUFBUUMsR0FBRyxDQUFDSyxxQkFBcUI7QUFDdEQ7QUFFQSxNQUFNQyxXQUFXLElBQUlYLHlEQUFZLENBQUNhLGNBQWM7QUFFaEQsaUVBQWVGLFFBQVFBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0X2RhYW5nbi8uL3NyYy9saWIvZHluYW1vREIudHM/ZTc1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQVdTIGZyb20gJ2F3cy1zZGsnO1xyXG5cclxuQVdTLmNvbmZpZy51cGRhdGUoe1xyXG4gICAgcmVnaW9uOiBwcm9jZXNzLmVudi5BV1NfUkVHSU9OLFxyXG4gICAgYWNjZXNzS2V5SWQ6IHByb2Nlc3MuZW52LkFXU19BQ0NFU1NfS0VZX0lELFxyXG4gICAgc2VjcmV0QWNjZXNzS2V5OiBwcm9jZXNzLmVudi5BV1NfU0VDUkVUX0FDQ0VTU19LRVlcclxufSk7XHJcblxyXG5jb25zdCBkeW5hbW9EYiA9IG5ldyBBV1MuRHluYW1vREIuRG9jdW1lbnRDbGllbnQoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGR5bmFtb0RiOyJdLCJuYW1lcyI6WyJBV1MiLCJjb25maWciLCJ1cGRhdGUiLCJyZWdpb24iLCJwcm9jZXNzIiwiZW52IiwiQVdTX1JFR0lPTiIsImFjY2Vzc0tleUlkIiwiQVdTX0FDQ0VTU19LRVlfSUQiLCJzZWNyZXRBY2Nlc3NLZXkiLCJBV1NfU0VDUkVUX0FDQ0VTU19LRVkiLCJkeW5hbW9EYiIsIkR5bmFtb0RCIiwiRG9jdW1lbnRDbGllbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/lib/dynamoDB.ts\n");

/***/ }),

/***/ "(api)/./src/lib/posts.ts":
/*!**************************!*\
  !*** ./src/lib/posts.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPost: () => (/* binding */ createPost),\n/* harmony export */   deletePost: () => (/* binding */ deletePost),\n/* harmony export */   getAllPosts: () => (/* binding */ getAllPosts),\n/* harmony export */   getPost: () => (/* binding */ getPost),\n/* harmony export */   getPostsByCategoryAndPage: () => (/* binding */ getPostsByCategoryAndPage),\n/* harmony export */   incrementPostViews: () => (/* binding */ incrementPostViews),\n/* harmony export */   searchPosts: () => (/* binding */ searchPosts),\n/* harmony export */   updatePost: () => (/* binding */ updatePost)\n/* harmony export */ });\n/* harmony import */ var _dynamoDB__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dynamoDB */ \"(api)/./src/lib/dynamoDB.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"uuid\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([uuid__WEBPACK_IMPORTED_MODULE_1__]);\nuuid__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// /src/lib/posts.ts\n\n\n// 게시글 생성\nconst createPost = async (title, content, category)=>{\n    const id = (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)();\n    const params = {\n        TableName: \"PostsTable\",\n        Item: {\n            id: id,\n            title,\n            content,\n            category,\n            views: 0,\n            createdAt: new Date().toISOString()\n        }\n    };\n    try {\n        await _dynamoDB__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(params).promise();\n        return id; //생성된 게시글의 id 반환\n    } catch (error) {\n        console.error(error);\n        throw new Error(\"게시글 생성 중 에러 발생: Error creating post\");\n    }\n};\n// 모든 게시물을 조회하는 함수\nconst getAllPosts = async ()=>{\n    const params = {\n        TableName: \"PostsTable\"\n    };\n    try {\n        const result = await _dynamoDB__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scan(params).promise();\n        return {\n            items: result.Items\n        };\n    } catch (error) {\n        console.error(error);\n        throw new Error(\"게시글 조회 중 에러 발생: Error fetching all posts\");\n    }\n};\n// 특정 게시글 조회 및 조회수 업데이트\nconst getPost = async (id)=>{\n    const getParams = {\n        TableName: \"PostsTable\",\n        Key: {\n            id\n        }\n    };\n    try {\n        const result = await _dynamoDB__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(getParams).promise();\n        if (result.Item) {\n            //조회수 업데이트 로직\n            return result.Item;\n        } else {\n            return null;\n        }\n    } catch (error) {\n        console.error(error);\n        throw new Error(\"게시글 조회 중 에러 발생: Error fetching post\");\n    }\n};\n//카테고리별 게시글 가져오기 / 페이징 (추후 구현)\nconst getPostsByCategoryAndPage = async (category)=>{\n    const params = {\n        TableName: \"PostsTable\",\n        IndexName: \"category-index\",\n        KeyConditionExpression: \"category = :category\",\n        ExpressionAttributeValues: {\n            \":category\": category\n        },\n        ScanIndexForward: true // 결과를 오름차순으로 정렬\n    };\n    try {\n        const result = await _dynamoDB__WEBPACK_IMPORTED_MODULE_0__[\"default\"].query(params).promise();\n        return {\n            items: result.Items\n        };\n    } catch (error) {\n        console.error(error);\n        throw new Error(\"카테고리별 게시글 조회 중 에러 발생: Error fetching posts by category\");\n    }\n};\n// 조회수 업데이트\nconst incrementPostViews = async (id)=>{\n    const updateviewsParams = {\n        TableName: \"PostsTable\",\n        Key: {\n            id\n        },\n        UpdateExpression: \"set #views = #views + :val\",\n        ExpressionAttributeNames: {\n            \"#views\": \"views\" //views라는 실제 속성 이름을 '#views'라는 별칭으로 매핑\n        },\n        ExpressionAttributeValues: {\n            \":val\": 1\n        },\n        ReturnValues: \"UPDATED_NEW\"\n    };\n    try {\n        await _dynamoDB__WEBPACK_IMPORTED_MODULE_0__[\"default\"].update(updateviewsParams).promise();\n    } catch (error) {\n        console.error(error);\n        throw new Error(\"조회수 업데이트 중 에러 발생: Error updating views\");\n    }\n};\n// 게시글 업데이트\nconst updatePost = async (id, title, content)=>{\n    const params = {\n        TableName: \"PostsTable\",\n        Key: {\n            id\n        },\n        UpdateExpression: \"set title = :title, content = :content\",\n        ExpressionAttributeValues: {\n            \":title\": title,\n            \":content\": content\n        },\n        ReturnValues: \"UPDATED_NEW\"\n    };\n    try {\n        await _dynamoDB__WEBPACK_IMPORTED_MODULE_0__[\"default\"].update(params).promise();\n    } catch (error) {\n        console.error(error);\n        throw new Error(\"게시글 업데이트 중 에러 발생: Error updating post\");\n    }\n};\n// 게시글 삭제\nconst deletePost = async (id)=>{\n    const params = {\n        TableName: \"PostsTable\",\n        Key: {\n            id\n        }\n    };\n    try {\n        await _dynamoDB__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"delete\"](params).promise();\n    } catch (error) {\n        console.error(error);\n        throw new Error(\"게시글 삭제 중 에러 발생: Error deleting post\");\n    }\n};\n// 게시글 검색\n/** (만일 사용자 이벤트 데이터뿐만 아니라 posts도 대규모 데이터셋을 이용할 시,\r\n *  'scan'은 테이블 전체를 스캔하므로 성능 저하 우려.\r\n *  이 때 'scan' 대신, 글로벌 보조 인덱스(GSI)와 함께 'query' 연산 사용) */ const searchPosts = async (keyword)=>{\n    const params = {\n        TableName: \"PostsTable\",\n        FilterExpression: \"contains(title, :keyword) or contains(content, :keyword)\",\n        ExpressionAttributeValues: {\n            \":keyword\": keyword\n        }\n    };\n    try {\n        const result = await _dynamoDB__WEBPACK_IMPORTED_MODULE_0__[\"default\"].scan(params).promise();\n        return result.Items;\n    } catch (error) {\n        console.error(error);\n        throw new Error(\"게시글 검색 중 에러 발생: Error searching posts\");\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/posts.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/posts.ts":
/*!********************************!*\
  !*** ./src/pages/api/posts.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_posts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/posts */ \"(api)/./src/lib/posts.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_posts__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_posts__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// /src/pages/api/posts.ts\n/** API 라우트 */ \nasync function handler(req, res) {\n    const { category } = req.query;\n    try {\n        if (req.method === \"POST\") {\n            //게시글 생성\n            const { title, content, category } = req.body;\n            const postId = await (0,_lib_posts__WEBPACK_IMPORTED_MODULE_0__.createPost)(title, content, category);\n            res.status(201).json({\n                message: \"게시글 생성 완료: Create Post\",\n                id: postId\n            }); // 게시글 id 포함하여 반환\n        } else if (req.method === \"GET\") {\n            const categoryValue = Array.isArray(category) ? category[0] : category;\n            if (!categoryValue || categoryValue.trim() === \"\") {\n                // category가 빈 문자열일 경우 모든 게시물 반환\n                const allPosts = await (0,_lib_posts__WEBPACK_IMPORTED_MODULE_0__.getAllPosts)();\n                res.status(200).json(allPosts);\n            } else {\n                // 특정 카테고리의 게시물 반환\n                const postsPage = await (0,_lib_posts__WEBPACK_IMPORTED_MODULE_0__.getPostsByCategoryAndPage)(categoryValue);\n                res.status(200).json(postsPage);\n            }\n        } else if (req.method === \"GET\" && req.query.keyword) {\n            //게시글 검색\n            console.log(\"Searching posts with keyword:\", req.query.keyword); // 키워드로 게시글 검색 로깅\n            const keyword = req.query.keyword;\n            const items = await (0,_lib_posts__WEBPACK_IMPORTED_MODULE_0__.searchPosts)(keyword);\n            res.status(200).json(items);\n        } else {\n            console.log(\"Method not allowed for this request:\", req.method);\n            res.setHeader(\"Allow\", [\n                \"POST\",\n                \"GET\",\n                \"PUT\",\n                \"DELETE\"\n            ]);\n            res.status(405).end(`Method ${req.method} Not Allowed`);\n        }\n    } catch (error) {\n        if (error instanceof Error) {\n            //오류가 Error 인스턴스인 경우\n            res.status(500).json({\n                message: `서버 오류: ${error.message}`\n            });\n        } else {\n            //오류 타입이 불명확한 경우\n            res.status(500).json({\n                message: \"서버 오류: Server Error\"\n            });\n        }\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3Bvc3RzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsMEJBQTBCO0FBRTFCLFlBQVksR0FFcUY7QUFFbEYsZUFBZUksUUFBU0MsR0FBbUIsRUFBRUMsR0FBb0I7SUFDNUUsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0YsSUFBSUcsS0FBSztJQUU5QixJQUFJO1FBQ0EsSUFBSUgsSUFBSUksTUFBTSxLQUFLLFFBQVE7WUFDdkIsUUFBUTtZQUNSLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUVKLFFBQVEsRUFBRSxHQUFHRixJQUFJTyxJQUFJO1lBQzdDLE1BQU1DLFNBQVMsTUFBTWIsc0RBQVVBLENBQUNVLE9BQU9DLFNBQVNKO1lBQ2hERCxJQUFJUSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxTQUFTO2dCQUEwQkMsSUFBSUo7WUFBTyxJQUFHLGlCQUFpQjtRQUM3RixPQUFPLElBQUlSLElBQUlJLE1BQU0sS0FBSyxPQUFPO1lBQzdCLE1BQU1TLGdCQUFnQkMsTUFBTUMsT0FBTyxDQUFDYixZQUFZQSxRQUFRLENBQUMsRUFBRSxHQUFHQTtZQUU5RCxJQUFJLENBQUNXLGlCQUFpQkEsY0FBY0csSUFBSSxPQUFPLElBQUk7Z0JBQy9DLGdDQUFnQztnQkFDaEMsTUFBTUMsV0FBVyxNQUFNckIsdURBQVdBO2dCQUNsQ0ssSUFBSVEsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQ087WUFDekIsT0FBTztnQkFDSCxrQkFBa0I7Z0JBQ2xCLE1BQU1DLFlBQVksTUFBTXJCLHFFQUF5QkEsQ0FBQ2dCO2dCQUNsRFosSUFBSVEsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQ1E7WUFDekI7UUFDSixPQUFPLElBQUlsQixJQUFJSSxNQUFNLEtBQUssU0FBU0osSUFBSUcsS0FBSyxDQUFDZ0IsT0FBTyxFQUFFO1lBQ2xELFFBQVE7WUFDUkMsUUFBUUMsR0FBRyxDQUFDLGlDQUFpQ3JCLElBQUlHLEtBQUssQ0FBQ2dCLE9BQU8sR0FBRyxpQkFBaUI7WUFDbEYsTUFBTUEsVUFBVW5CLElBQUlHLEtBQUssQ0FBQ2dCLE9BQU87WUFDakMsTUFBTUcsUUFBUSxNQUFNeEIsdURBQVdBLENBQUNxQjtZQUNoQ2xCLElBQUlRLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUNZO1FBQ3pCLE9BQU87WUFDSEYsUUFBUUMsR0FBRyxDQUFDLHdDQUF3Q3JCLElBQUlJLE1BQU07WUFDOURILElBQUlzQixTQUFTLENBQUMsU0FBUztnQkFBQztnQkFBUTtnQkFBTztnQkFBTzthQUFTO1lBQ3ZEdEIsSUFBSVEsTUFBTSxDQUFDLEtBQUtlLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRXhCLElBQUlJLE1BQU0sQ0FBQyxZQUFZLENBQUM7UUFDMUQ7SUFDSixFQUFFLE9BQU9xQixPQUFPO1FBQ1osSUFBSUEsaUJBQWlCQyxPQUFPO1lBQ3hCLG9CQUFvQjtZQUNwQnpCLElBQUlRLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLFNBQVMsQ0FBQyxPQUFPLEVBQUVjLE1BQU1kLE9BQU8sQ0FBQyxDQUFDO1lBQUE7UUFDN0QsT0FBTztZQUNILGdCQUFnQjtZQUNoQlYsSUFBSVEsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsU0FBUztZQUFxQjtRQUN6RDtJQUNKO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0X2RhYW5nbi8uL3NyYy9wYWdlcy9hcGkvcG9zdHMudHM/NmFlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvc3JjL3BhZ2VzL2FwaS9wb3N0cy50c1xyXG5cclxuLyoqIEFQSSDrnbzsmrDtirggKi9cclxuaW1wb3J0IHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnO1xyXG5pbXBvcnQgeyBjcmVhdGVQb3N0LCBnZXRBbGxQb3N0cywgZ2V0UG9zdHNCeUNhdGVnb3J5QW5kUGFnZSwgc2VhcmNoUG9zdHMgfSBmcm9tICcuLi8uLi9saWIvcG9zdHMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyIChyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkge1xyXG4gICAgY29uc3QgeyBjYXRlZ29yeSB9ID0gcmVxLnF1ZXJ5O1xyXG4gICAgICAgIFxyXG4gICAgdHJ5IHtcclxuICAgICAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ1BPU1QnKSB7XHJcbiAgICAgICAgICAgIC8v6rKM7Iuc6riAIOyDneyEsVxyXG4gICAgICAgICAgICBjb25zdCB7IHRpdGxlLCBjb250ZW50LCBjYXRlZ29yeSB9ID0gcmVxLmJvZHk7XHJcbiAgICAgICAgICAgIGNvbnN0IHBvc3RJZCA9IGF3YWl0IGNyZWF0ZVBvc3QodGl0bGUsIGNvbnRlbnQsIGNhdGVnb3J5KTtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24oeyBtZXNzYWdlOiAn6rKM7Iuc6riAIOyDneyEsSDsmYTro4w6IENyZWF0ZSBQb3N0JywgaWQ6IHBvc3RJZCB9KTsvLyDqsozsi5zquIAgaWQg7Y+s7ZWo7ZWY7JesIOuwmO2ZmFxyXG4gICAgICAgIH0gZWxzZSBpZiAocmVxLm1ldGhvZCA9PT0gJ0dFVCcpIHtcclxuICAgICAgICAgICAgY29uc3QgY2F0ZWdvcnlWYWx1ZSA9IEFycmF5LmlzQXJyYXkoY2F0ZWdvcnkpID8gY2F0ZWdvcnlbMF0gOiBjYXRlZ29yeTtcclxuICAgICAgICBcclxuICAgICAgICAgICAgaWYgKCFjYXRlZ29yeVZhbHVlIHx8IGNhdGVnb3J5VmFsdWUudHJpbSgpID09PSAnJykge1xyXG4gICAgICAgICAgICAgICAgLy8gY2F0ZWdvcnnqsIAg67mIIOusuOyekOyXtOydvCDqsr3smrAg66qo65OgIOqyjOyLnOusvCDrsJjtmZhcclxuICAgICAgICAgICAgICAgIGNvbnN0IGFsbFBvc3RzID0gYXdhaXQgZ2V0QWxsUG9zdHMoKTtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGFsbFBvc3RzKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIC8vIO2KueyglSDsubTthYzqs6DrpqzsnZgg6rKM7Iuc66y8IOuwmO2ZmFxyXG4gICAgICAgICAgICAgICAgY29uc3QgcG9zdHNQYWdlID0gYXdhaXQgZ2V0UG9zdHNCeUNhdGVnb3J5QW5kUGFnZShjYXRlZ29yeVZhbHVlKTtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHBvc3RzUGFnZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKHJlcS5tZXRob2QgPT09ICdHRVQnICYmIHJlcS5xdWVyeS5rZXl3b3JkKSB7XHJcbiAgICAgICAgICAgIC8v6rKM7Iuc6riAIOqygOyDiVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnU2VhcmNoaW5nIHBvc3RzIHdpdGgga2V5d29yZDonLCByZXEucXVlcnkua2V5d29yZCk7IC8vIO2CpOybjOuTnOuhnCDqsozsi5zquIAg6rKA7IOJIOuhnOq5hVxyXG4gICAgICAgICAgICBjb25zdCBrZXl3b3JkID0gcmVxLnF1ZXJ5LmtleXdvcmQgYXMgc3RyaW5nO1xyXG4gICAgICAgICAgICBjb25zdCBpdGVtcyA9IGF3YWl0IHNlYXJjaFBvc3RzKGtleXdvcmQpO1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihpdGVtcyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ01ldGhvZCBub3QgYWxsb3dlZCBmb3IgdGhpcyByZXF1ZXN0OicsIHJlcS5tZXRob2QpO1xyXG4gICAgICAgICAgICByZXMuc2V0SGVhZGVyKCdBbGxvdycsIFsnUE9TVCcsICdHRVQnLCAnUFVUJywgJ0RFTEVURSddKTtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDUpLmVuZChgTWV0aG9kICR7cmVxLm1ldGhvZH0gTm90IEFsbG93ZWRgKTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XHJcbiAgICAgICAgICAgIC8v7Jik66WY6rCAIEVycm9yIOyduOyKpO2EtOyKpOyduCDqsr3smrBcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBg7ISc67KEIOyYpOulmDogJHtlcnJvci5tZXNzYWdlfWB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvL+yYpOulmCDtg4DsnoXsnbQg67aI66qF7ZmV7ZWcIOqyveyasFxyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6ICfshJzrsoQg7Jik66WYOiBTZXJ2ZXIgRXJyb3InfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il0sIm5hbWVzIjpbImNyZWF0ZVBvc3QiLCJnZXRBbGxQb3N0cyIsImdldFBvc3RzQnlDYXRlZ29yeUFuZFBhZ2UiLCJzZWFyY2hQb3N0cyIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJjYXRlZ29yeSIsInF1ZXJ5IiwibWV0aG9kIiwidGl0bGUiLCJjb250ZW50IiwiYm9keSIsInBvc3RJZCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiaWQiLCJjYXRlZ29yeVZhbHVlIiwiQXJyYXkiLCJpc0FycmF5IiwidHJpbSIsImFsbFBvc3RzIiwicG9zdHNQYWdlIiwia2V5d29yZCIsImNvbnNvbGUiLCJsb2ciLCJpdGVtcyIsInNldEhlYWRlciIsImVuZCIsImVycm9yIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/posts.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fposts&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cposts.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();